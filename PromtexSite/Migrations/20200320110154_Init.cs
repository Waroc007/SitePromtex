using System;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace PromtexSite.Migrations
{
    public partial class Init : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Medals",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    Text = table.Column<string>(nullable: false),
                    Visible = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Medals", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "News",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    Text = table.Column<string>(nullable: false),
                    TextMin = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    Date = table.Column<DateTime>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_News", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Prices",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    Name = table.Column<string>(nullable: true),
                    Unit = table.Column<string>(nullable: true),
                    Price = table.Column<double>(nullable: false),
                    Type = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Prices", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Questions",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    Name = table.Column<string>(nullable: false),
                    Text = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Questions", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Reviews",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    Counter = table.Column<int>(nullable: false),
                    PhotoFolder = table.Column<string>(nullable: false),
                    ReviewFolder = table.Column<string>(nullable: false),
                    Text = table.Column<string>(nullable: false),
                    TextMin = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    CompanyName = table.Column<string>(nullable: false),
                    CompanyPosition = table.Column<string>(nullable: false),
                    Type = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Reviews", x => x.ID);
                });

            migrationBuilder.InsertData(
                table: "Medals",
                columns: new[] { "ID", "Text", "Visible" },
                values: new object[,]
                {
                    { 1, "Отличник технологии", true },
                    { 12, "Более 20 клиентов в сфере «Производство»", false },
                    { 10, "Более 20 клиентов в сфере «Строительство»", false },
                    { 9, "Нам доверяют более 100 клиентов", false },
                    { 8, "Лидер отзывов клиентов", false },
                    { 7, "Более 20 клиентов в сфере «Розничная торговля»", true },
                    { 11, "Страхование финансовой ответственности", false },
                    { 5, "Отличник продаж", true },
                    { 4, "Более 20 клиентов в сфере «Услуг»", true },
                    { 3, "Регистрация бизнеса", true },
                    { 2, "Команда профессиональных бухгалтеров", true },
                    { 6, "Более 20 клиентов в сфере «Оптовая торговля»", true }
                });

            migrationBuilder.InsertData(
                table: "Prices",
                columns: new[] { "ID", "Name", "Price", "Type", "Unit" },
                values: new object[,]
                {
                    { 30, "Выезд курьера в Ленинградскую область", 25.0, 6, "км" },
                    { 23, "Формирование \"алкогольной\" декларации", 2100.0, 3, "час" },
                    { 24, "Формирование декларации 3-НДФЛ", 2100.0, 3, "час" },
                    { 25, "Хранение архива документов (для клиентов регулярного сервиса \"1С:БухОбслуживание\" только для документов прошедшего отчетного года после получения уведомления от Исполнителя о готовности их к передаче)", 50.0, 4, "архивное дело/месяц" },
                    { 26, "Письменное налоговое и бухгалтерское консультирование", 2100.0, 5, "час" },
                    { 27, "Финансовое и налоговое планирование", 2100.0, 5, "час" },
                    { 28, "Изготовление ксерокопии/сканкопии документов за лист", 50.0, 6, "лист А4" },
                    { 29, "Составление реестра документов для их приема-передачи/за каждый документ (строку) в реестре", 5.0, 6, "документ" },
                    { 31, "Выезд курьера по СПб", 500.0, 6, "поездка" },
                    { 37, "Составление заявления о смене объекта налогообложения при УСН", 1000.0, 7, "документ" },
                    { 33, "Получение выписки из ЕГРЮЛ/ЕГРИП в обычном режиме 5-7 рабочих дней", 1200.0, 7, "документ" },
                    { 34, "Получение выписки из ЕГРЮЛ/ЕГРИП в срочном режиме 1-2 рабочих дня", 1600.0, 7, "документ" },
                    { 35, "Составление заявления о постановке на учет в качестве плательщика ЕНВД, патента", 1000.0, 7, "документ" },
                    { 36, "Составление заявления о переходе на УСН или отказ от применения УСН", 1000.0, 7, "документ" },
                    { 22, "Формирование квартальной «Нулевой отчетности» УСН/ ЕСХН", 3300.0, 3, "комплект отчетности" },
                    { 38, "Регистрация (ликвидация) обособленного подразделения в налоговом органе по месту нахождения в СПб", 3000.0, 7, "шт." },
                    { 39, "ЕНВД", 3110.0, 8, "от 3110 рублей/месяц" },
                    { 40, "УСНО «доходы»", 1780.0, 8, "от 1780 рублей/месяц" },
                    { 41, "УСНО «доходы-расходы» или ЕСХН", 1780.0, 8, "от 1780 рублей/месяц" },
                    { 32, "«Удаленный секретарь»: составление деловых писем, документов и т.п.", 2100.0, 6, "час" },
                    { 21, "Формирование квартальной «Нулевой отчетности» ОСН", 3976.0, 3, "комплект отчетности" },
                    { 15, "Оформление пакета документов в командировку (Форма Т-9, Т-10, Т-10а)", 350.0, 1, "пакет документов" },
                    { 19, "Сдача отчетности курьером Исполнителя", 1000.0, 3, "комплект отчетности" },
                    { 1, "Составление типовой учетной политики", 1200.0, 0, "документ" },
                    { 2, "Разработка индивидуальной учетной политики", 1200.0, 0, "час" },
                    { 3, "Разработка индивидуальной учетной политики", 1200.0, 0, "час" },
                    { 4, "Разработка индивидуальной учетной политики", 1200.0, 0, "час" },
                    { 5, "Составление штатного расписания", 2100.0, 1, "час" },
                    { 6, "Предоставление образцов заявлений работника (о приеме на работу, об увольнении, о предоставлении отпуска и т.п.)", 200.0, 1, "документ" },
                    { 7, "Предоставление образцов записей в трудовую книжку", 200.0, 1, "документ" },
                    { 20, "Сдача отчетности почтовым отправлением с описью вложения", 1000.0, 3, "комплект отчетности" },
                    { 9, "Разработка/изменение Правил внутреннего трудового распорядка", 2100.0, 1, "час" },
                    { 8, "Разработка/изменение Положения об оплате труда (премировании)", 2100.0, 1, "час" },
                    { 11, "Разработка/изменение Положения о защите персональных данных", 2100.0, 1, "час" },
                    { 12, "Разработка/изменение Положения о командировках", 2100.0, 1, "час" },
                    { 13, "Восстановление кадрового учета", 2100.0, 1, "час" },
                    { 14, "Заполнение оригинала больничного листа вручную/за 1 документ", 450.0, 1, "больничный лист" },
                    { 42, "ОСНО", 6220.0, 8, "от 6220 рублей/месяц" },
                    { 16, "Обучение сотрудников Заказчика работе в 1С ЗУП", 2100.0, 2, "час" },
                    { 17, "Восстановление расчета заработной платы за предыдущие периоды", 2100.0, 2, "час" },
                    { 18, "Подготовка и сдача комплекта документов в ФСС на возмещение выплат по больничным листам и т.п.", 2100.0, 2, "час" },
                    { 10, "Оформление графика отпусков", 2100.0, 1, "час" },
                    { 43, "Комбинированные СНО", 5600.0, 8, "от 5600 рублей/месяц" }
                });

            migrationBuilder.InsertData(
                table: "Reviews",
                columns: new[] { "ID", "CompanyName", "CompanyPosition", "Counter", "Name", "PhotoFolder", "ReviewFolder", "Text", "TextMin", "Type" },
                values: new object[,]
                {
                    { 2, "ООО\"Юй Синь\"", "Генеральный директор", 2, "Ван Хаоминь", "/img/Review/yuisin_small.jpg", "/img/Review/yuisin_preview.jpg", @"Хочу выразить благодарность за качественно оказываемые услуги по ведению бухгалтерии.

                Сотрудничаем с «1С:БухОбслуживание.ПрофБО» (ООО «Промтекс») на протяжении полутора лет. За это время мы успели оценить по достоинству квалификацию бухгалтеров, обслуживающих нашу компанию, и результаты их работы.

                С большим удовольствием рекомендую услуги «1С:БухОбслуживание.ПрофБО» (ООО «Промтекс») небольшим компаниям, индивидуальным предпринимателям и всем руководителям, которые желают переложить обязанность по ведению учета на ответственного и профессионального исполнителя.", "Хочу выразить благодарность за качественно оказываемые услуги по ведению бухгалтерии.", 3 },
                    { 1, "ООО \"Офис\"", "Генеральный директор", 1, "Алексеева Светлана Александровна", "/img/Review/alekseeva_small.jpg", "/img/Review/ofis.jpg", @"ООО «Офис» порядка десятка лет занимается поставкой жалюзи и оказанием сопутствующих услуг корпоративным клиентам в Санкт-Петербурге. Светлана Алексеева руководитель компании пишет:

                «Мой бизнес не является для меня основной деятельностью. Он для меня, как хобби или, скорее, приработок. При такой ситуации, естественно, что я не могу уделять ему много внимания, особенно в рабочее время.

                Поэтому выражаю благодарность компании «1С:БухОбслуживание. ПрофБО» за организованный сервис. Для меня это, что называется: «все включено». Тарифный план «Комплексный сервис» плюс дополнительные услуги, оказываемые по моему поручению, такие как «оплата счетов», «удаленный секретарь», услуги курьера и некоторые другие, позволяют мне не заботиться об оформлении и обмене документами с контрагентами и, собственно, бухгалтерском и налоговом учете, сдаче регламентированной отчетности.

                Я думаю, что даже не полная ответственность за ущерб, закрепленная в договоре, сколько простая формула, «чем лучше идут дела в моем бизнесе, тем больше хозяйственных операций и сумма за обслуживание», позволила мне найти единомышленников по части взаимодействия с моими заказчиками. Уже несколько раз слышала слова благодарности за четкую работу и вежливое обращение. При этом у меня нет никакой заботы, контролировать кого-либо или организовывать. Страшно вспоминать, сколько я потратила ранее в пустую времени, сил и денег на штатного офис-менеджера, бухгалтера и курьера. Ведь нельзя же оставить кого-то одного, не будет резерва. А вдруг кто-то заболеет или уволиться. Так они хоть худо-бедно могли подменить друг друга на время в какой-то части.

                Теперь сумма моих затрат по этим участкам работы не превышает заработной платы одного достойного специалиста. Ну, иногда, в удачные месяцы - заработной платы специалиста плюс начисления на нее. А в неудачные месяцы, не сезон я просто плачу меньше и не рискую влезть в убыток, оправляться от которого приходилось несколько месяцев подряд. И, неизвестно, оправишься ли вообще.

                Признаться, я даже не ожидала, что такое возможно! Очень довольна!»", "Для меня сервис «1С:БухОбслуживание. ПрофБО», что называется: «все включено».", 4 }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Medals");

            migrationBuilder.DropTable(
                name: "News");

            migrationBuilder.DropTable(
                name: "Prices");

            migrationBuilder.DropTable(
                name: "Questions");

            migrationBuilder.DropTable(
                name: "Reviews");
        }
    }
}
